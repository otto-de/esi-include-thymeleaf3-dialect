apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'signing'
apply plugin: 'com.github.ben-manes.versions'

version = '1.1.1-SNAPSHOT'
group = 'de.otto'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")


sourceCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

ext.libraries = [
        thymeleaf3: [
                'org.thymeleaf:thymeleaf:3.0.12.RELEASE',
                'org.thymeleaf:thymeleaf-spring5:3.0.12.RELEASE'
        ]
]

dependencies {
    ext.springBootVersion = '2.4.1'
    compileOnly libraries.thymeleaf3

    implementation group: 'org.springframework', name: 'spring-context', version: '5.3.2'
    implementation group: 'org.springframework', name: 'spring-beans', version: '5.3.2'
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: springBootVersion
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    implementation group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'

    testImplementation group: 'junit', name: 'junit', version: '4.13.1'
    testImplementation libraries.thymeleaf3
    testImplementation "org.mockito:mockito-core:3.7.0"
    testImplementation "org.hamcrest:hamcrest-core:2.2"
    testImplementation "org.hamcrest:hamcrest-library:2.2"
    testImplementation 'com.jayway.awaitility:awaitility:1.7.0'
    testImplementation 'org.springframework:spring-test:5.3.2'

    compileOnly "org.springframework.boot:spring-boot-configuration-processor:" + springBootVersion
}

// for gradle plugins
buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.5'
        classpath 'org.codehaus.groovy:groovy-backports-compat23:2.3.5'
    }
}

jar {
    manifest.attributes provider: 'gradle'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }
            snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                authentication(userName: sonatypeUsername, password: sonatypePassword)
            }

            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            pom.project {
                name 'esi-include-thymeleaf3-dialect'
                packaging 'jar'
                description 'This library provides a thymeleaf3 dialect that resolves esi:include tags.'
                url 'http://github.com/otto-de/esi-include-thymeleaf3-dialect'

                scm {
                    url 'scm:git@github.com:otto-de/esi-include-thymeleaf3-dialect.git'
                    connection 'scm:git@github.com:otto-de/esi-include-thymeleaf3-dialect.git'
                    developerConnection 'scm:git@github.com:otto-de/esi-include-thymeleaf3-dialect.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'ffriedrich'
                        name 'Frank Bregulla'
                    }
                    developer {
                        id 'gsteinacker'
                        name 'Guido Steinacker'
                    }
                }
            }
        }
    }
}

task uploadLocal(type: Upload) {
    configuration = configurations.archives
    uploadDescriptor = true
    repositories {
        mavenLocal()
    }
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask(":uploadArchives") }
    sign configurations.archives
}



