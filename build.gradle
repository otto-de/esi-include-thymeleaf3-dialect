apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'maven-publish'
apply plugin: 'signing'


version = '2.0.0'
group = 'de.otto'

sourceCompatibility = 17

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

ext.libraries = [
        thymeleaf3: [
                'org.thymeleaf:thymeleaf:3.1.1.RELEASE',
                'org.thymeleaf:thymeleaf-spring6:3.1.1.RELEASE'
        ]
]

dependencies {
    ext.springBootVersion = '3.1.0'
    compileOnly libraries.thymeleaf3

    implementation('org.springframework:spring-context:6.0.9')
    implementation('org.springframework:spring-beans:6.0.9')
    implementation('org.springframework.boot:spring-boot-autoconfigure:' + springBootVersion)
    implementation('jakarta.servlet:jakarta.servlet-api:6.0.0')
    implementation('jakarta.annotation:jakarta.annotation-api:2.1.1')

    testImplementation("org.junit.jupiter:junit-jupiter-engine:5.9.3")
    testImplementation(libraries.thymeleaf3)
    testImplementation("org.mockito:mockito-core:5.3.1")
    testImplementation("org.hamcrest:hamcrest-core:2.2")
    testImplementation("org.hamcrest:hamcrest-library:2.2")
    testImplementation("org.awaitility:awaitility:4.2.0")
    testImplementation('org.springframework:spring-test:6.0.9')

    compileOnly "org.springframework.boot:spring-boot-configuration-processor:" + springBootVersion
}

test {
    useJUnitPlatform()
}

jar {
    manifest.attributes provider: 'gradle'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    archiveClassifier = 'sources'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'esi-include-thymeleaf3-dialect'
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'esi-include-thymeleaf3-dialect'
                packaging 'jar'
                description = 'This library provides a thymeleaf3 dialect that resolves esi:include tags.Ã¼'
                url = 'http://github.com/otto-de/esi-include-thymeleaf3-dialect'

                scm {
                    url = 'scm:git@github.com:otto-de/esi-include-thymeleaf3-dialect.git'
                    connection = 'scm:git@github.com:otto-de/esi-include-thymeleaf3-dialect.git'
                    developerConnection = 'scm:git@github.com:otto-de/esi-include-thymeleaf3-dialect.git'
                }

                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'gsteinacker'
                        name = 'Guido Steinacker'
                    }
                    developer {
                        id = 'fbregulla'
                        name = 'Frank Bregulla'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            if (project.version.endsWith('-SNAPSHOT')) {
                url = "https://oss.sonatype.org/content/repositories/snapshots/"
            } else {
                url = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            }
            name = "Sonatype_Snapshots"
            credentials {
                username = findProperty("sonatypeUsername")
                password = findProperty("sonatypePassword")
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}


