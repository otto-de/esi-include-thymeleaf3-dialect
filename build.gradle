plugins {
    id('java')
    id('eclipse')
    id('idea')
    id('maven-publish')
    id("org.jreleaser") version "1.17.0"
}

version = '2.2.0'
group = 'de.otto'

java {
    sourceCompatibility = 17
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    ext.springBootVersion = '3.4.4'
    implementation(platform("org.springframework.boot:spring-boot-dependencies:${springBootVersion}"))
    compileOnly("org.thymeleaf:thymeleaf")
    compileOnly("org.thymeleaf:thymeleaf-spring6")

    implementation('org.springframework:spring-context')
    implementation('org.springframework:spring-beans')
    implementation('org.springframework.boot:spring-boot-autoconfigure')
    implementation('jakarta.servlet:jakarta.servlet-api')
    implementation('jakarta.annotation:jakarta.annotation-api')

    testImplementation("org.junit.jupiter:junit-jupiter-engine")
    testImplementation("org.thymeleaf:thymeleaf")
    testImplementation("org.thymeleaf:thymeleaf-spring6")

    testImplementation("org.mockito:mockito-core")
    testImplementation("org.hamcrest:hamcrest-core")
    testImplementation("org.hamcrest:hamcrest-library")
    testImplementation("org.awaitility:awaitility")
    testImplementation('org.springframework:spring-test')

    compileOnly "org.springframework.boot:spring-boot-configuration-processor"
}

test {
    useJUnitPlatform()
}

jar {
    manifest.attributes provider: 'gradle'
}

jreleaser {
    project {
        snapshot {
            fullChangelog = true
        }
    }
    gitRootSearch = true
    signing {
        active = 'ALWAYS'
        armored = true
    }
    deploy {
        maven {
            github {
                app {
                    snapshotSupported = true
                    active = 'ALWAYS'
                    url = "https://maven.pkg.github.com/otto-de/esi-include-thymeleaf3-dialect"
                    stagingRepository('build/staging-deploy')
                }
            }
            mavenCentral {
                app {
                    snapshotSupported = false
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')

                    // Time to wait between state transition checks, in seconds.
                    // Defaults to `10`.
                    //
                    retryDelay = 10

                    // Maximum number of attempts to verify state transition.
                    // Defaults to `60`.
                    // Maven Central release can currently take up to 20 minutes, so we increased this to 120
                    //
                    maxRetries = 120
                }
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = 'esi-include-thymeleaf3-dialect'
            from components.java
            pom {
                name = 'esi-include-thymeleaf3-dialect'
                description = 'This library provides a thymeleaf3 dialect that resolves esi:include tags.Ã¼'
                url = 'http://github.com/otto-de/esi-include-thymeleaf3-dialect'

                scm {
                    connection = 'scm:git:https://github.com/otto-de/esi-include-thymeleaf3-dialect.git'
                    developerConnection = 'scm:git:ssh://github.com/otto-de/esi-include-thymeleaf3-dialect.git'
                    url = 'https://github.com/otto-de/esi-include-thymeleaf3-dialect'
                }

                licenses {
                    license {
                        name = "The Apache Software License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'gsteinacker'
                        name = 'Guido Steinacker'
                    }
                    developer {
                        id = 'fbregulla'
                        name = 'Frank Bregulla'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            // Our settingsDirectory is the project root dir.
            // We want to 'publish' to the specified dir to have the artifacts uploaded with JReleaser from that location afterwards.
            url = layout.settingsDirectory.dir('build/staging-deploy')
        }
    }

}

